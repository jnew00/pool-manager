name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ vars.DOCKER_REPO }}/${{ vars.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup Tailscale manually
        run: |
          # Install Tailscale
          curl -fsSL https://tailscale.com/install.sh | sh
          
          # Kill existing tailscaled if running
          sudo pkill -f tailscaled || true
          sleep 1
          
          # Start tailscaled fresh
          sudo tailscaled &
          sleep 3
          
          # Authenticate using auth key (you need to create this in Tailscale admin)
          echo "Authenticating with Tailscale..."
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --accept-routes
          
          # Show status
          sudo tailscale status
          
      - name: Notify Diun of new image
        run: |
          echo "🚀 Notifying Diun of new PoolManager image..."
          curl -X POST http://100.127.37.80:8042/webhooks/docker \
               -H "Content-Type: application/json" \
               -d '{
                 "push_data": {
                   "tag": "latest"
                 },
                 "repository": {
                   "repo_name": "${{ vars.DOCKER_REPO }}/${{ vars.DOCKER_IMAGE }}"
                 }
               }' \
          && echo "✅ Diun notification sent successfully" \
          || echo "❌ Failed to notify Diun (check Tailscale connection)"

      - name: Build summary
        run: |
          echo "## 🐳 Docker Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ vars.DOCKER_REPO }}/${{ vars.DOCKER_IMAGE }}:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** Docker Hub" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** linux/amd64" >> $GITHUB_STEP_SUMMARY
        
